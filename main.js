(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,l){var u=o.handleCardClick,c=i.addLike,s=a.deleteLike,f=l.handleDeleteClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._userId=n,this._ownerId=e.owner._id,this._cardId=e._id,this._name=e.name,this._link=e.link,this._cardSelector=r,this._handleCardClick=u,this.likeCounter=e.likes.length,this.addLike=c,this.deleteLike=s,this.dataLikes=e.likes,this.handleDeleteClick=f}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this.elementImg=this._element.querySelector(".element__image"),this.elementImg.id=this._cardId,this.elementImg.src=this._link,this.elementImg.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._element.querySelector(".element__like-counter").textContent=this.likeCounter,this._ownerId!==this._userId&&this._element.querySelector(".element__button-delete").remove(),this._isLiked(this.dataLikes),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__like").addEventListener("click",(function(t){e._element.querySelector(".element__like").classList.contains("element__like_active")?e.deleteLike(e._cardId):e.addLike(e._cardId)})),this._element.querySelector(".element__button-delete").addEventListener("click",(function(){e.handleDeleteClick(e.elementImg.id,e._element)})),this._element.querySelector(".element__image").addEventListener("click",(function(t){e._handleCardClick(t)}))}},{key:"hideLike",value:function(e){this._element.querySelector(".element__like-counter").textContent=e.likes.length,this._element.querySelector(".element__like").classList.toggle("element__like_active")}},{key:"showLike",value:function(e){this._element.querySelector(".element__like-counter").textContent=e.likes.length,this._element.querySelector(".element__like").classList.toggle("element__like_active")}},{key:"_isLiked",value:function(e){var t=this;e.forEach((function(e){e._id===t._userId&&t._element.querySelector(".element__like").classList.add("element__like_active")}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),r(this,"addBtnDisables",(function(){o._buttonElement.classList.add(o._inactiveButtonClass),o._buttonElement.setAttribute("disabled",!0)})),r(this,"_removeBtnDisabled",(function(){o._buttonElement.classList.remove(o._inactiveButtonClass),o._buttonElement.removeAttribute("disabled")})),r(this,"isValid",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e)})),r(this,"_showInputError",(function(e){var t=o._validateElement.querySelector(".".concat(e.id,"-input-error"));e.classList.add(o._inputErrorClass),t.classList.add(o._errorClass),t.textContent=e.validationMessage})),r(this,"_hideInputError",(function(e){var t=o._validateElement.querySelector(".".concat(e.id,"-input-error"));e.classList.remove(o._inputErrorClass),t.classList.remove(o._errorClass),t.textContent=""})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._validateElement=n,this._inputList=Array.from(this._validateElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._validateElement.querySelector(this._submitButtonSelector)}var t,o;return t=e,(o=[{key:"enableValidation",value:function(){this._validateElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e.isValid(t),e.toggleButtonState()}))}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this.addBtnDisables(this._buttonElement):this._removeBtnDisabled(this._buttonElement)}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,o),e}(),i=document.querySelector("#name"),a=document.querySelector("#job"),l=document.querySelector(".profile__button-add"),u=document.querySelector(".profile__button"),c=document.querySelector(".profile__image-btn"),s=document.querySelector(".form__button"),f=document.querySelector("#newCardSubmitBtn"),h=document.querySelector("#avatar__btn"),p={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"};function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&_(t.prototype,n),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupSelector=t,this._element=document.querySelector(this._popupSelector)}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._element.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".popup__button-close").addEventListener("click",(function(){e.close()})),this._element.addEventListener("mousedown",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&m(t.prototype,n),e}();function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n,r=t.formSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._formSubmit=r,n._form=n._element.querySelector(".form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputValues=this._form.querySelectorAll(".form__input"),this._inputValues.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;g(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._getInputValues())}))}},{key:"close",value:function(){g(E(a.prototype),"close",this).call(this),this._form.reset()}}])&&b(t.prototype,n),a}(y);function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function R(e){return(R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imagePopupTitle=t._element.querySelector(".popup__title"),t._imagePopupImg=t._element.querySelector(".popup__img"),t}return t=a,(n=[{key:"open",value:function(e,t){this._imagePopupTitle.textContent=e,this._imagePopupImg.src=t,this._imagePopupImg.alt=e,O(R(a.prototype),"open",this).call(this)}}])&&L(t.prototype,n),a}(y);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._URL=n,this._token=r.authorization}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._URL,"cards"),{headers:{authorization:this._token}}).then(this._handleResponse)}},{key:"getUserInfoFromServer",value:function(){return fetch("".concat(this._URL,"users/me"),{headers:{authorization:this._token}}).then(this._handleResponse)}},{key:"setUserInfoFromServer",value:function(e){return fetch("".concat(this._URL,"users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.job})}).then(this._handleResponse)}},{key:"addCardToServer",value:function(e){return fetch("".concat(this._URL,"cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleResponse)}},{key:"deleteCardFromServer",value:function(e){return fetch("".concat(this._URL,"cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._URL,"cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._handleResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._URL,"cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._handleResponse)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._URL,"users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.link})}).then(this._handleResponse)}},{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}}])&&q(t.prototype,n),e}();function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._info=t.job,this._avatar=t.avatar,this._profileName=document.querySelector(this._name),this._profileJob=document.querySelector(this._info),this._profileAvatar=document.querySelector(this._avatar)}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e){this._itemId=e._id,this._profileName.textContent=e.name,this._profileJob.textContent=e.about,this._profileAvatar.src=e.avatar}},{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,job:this._profileJob.textContent,avatar:this._profileAvatar.src,userId:this._itemId}}}])&&B(t.prototype,n),e}();function U(e){return(U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(e,t,n){return(D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function V(e,t){return(V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function z(e,t){return!t||"object"!==U(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var F=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&V(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return z(this,e)});function a(e,t){var n,r=t.submit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submit=r,n._form=n._element.querySelector(".form"),n}return t=a,(n=[{key:"open",value:function(e,t){D(N(a.prototype),"open",this).call(this),this.id=e,this.elem=t}},{key:"setEventListeners",value:function(){var e=this;D(N(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submit(e.id,e.elem)}))}}])&&A(t.prototype,n),a}(y);function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=new x({name:".profile__name",job:".profile__job",avatar:".profile__image"}),M=new T({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-26/",headers:{authorization:"4e299d77-1777-4738-8eea-94761855c603","Content-Type":"application/json"}}),$=M.getUserInfoFromServer(),G=M.getInitialCards();Promise.all([$,G]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return J(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?J(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];H.setUserInfo(o),Q.renderItems(i.reverse())})).catch((function(e){console.log(e)}));var K=new P(".popup_type_image");K.setEventListeners();var Q=new d({renderer:function(e){W(e)}},".elements__list"),W=function(e){var n=function(e){var n=H.getUserInfo().userId,r=new t(e,n,".element_template",{handleCardClick:function(e){K.open(e.target.alt,e.target.src)}},{addLike:function(e){M.addLike(e).then((function(e){e&&r.showLike(e)})).catch((function(e){console.log(e)}))}},{deleteLike:function(e){M.deleteLike(e).then((function(e){e&&r.hideLike(e)})).catch((function(e){console.log(e)}))}},{handleDeleteClick:function(e,t){ee.open(e,t)}});return r.generateCard()}(e);Q.addItem(n)},X=new w(".popup_type_new-card",{formSubmit:function(e){f.textContent="Сохранить...",M.addCardToServer(e).then((function(e){W(e),X.close(),ne.addBtnDisables()})).catch((function(e){console.log(e)})).finally((function(){f.textContent="Сохранить"}))}});X.setEventListeners();var Y=new w(".popup_type_edit",{formSubmit:function(e){s.textContent="Сохранить...",M.setUserInfoFromServer(e).then((function(e){H.setUserInfo(e),Y.close()})).catch((function(e){console.log(e)})).finally((function(){s.textContent="Сохранить"}))}});Y.setEventListeners();var Z=new w(".popup_type_avatar",{formSubmit:function(e){h.textContent="Сохранить...",M.changeAvatar(e).then((function(e){H.setUserInfo(e),Z.close()})).catch((function(e){console.log(e)})).finally((function(){h.textContent="Сохранить"}))}});Z.setEventListeners();var ee=new F(".popup_type_confirmation",{submit:function(e,t){M.deleteCardFromServer(e).then((function(e){e&&(t.remove(),ee.close())})).catch((function(e){console.log(e)}))}});ee.setEventListeners(),l.addEventListener("click",(function(){ne.resetValidation(),X.open()})),c.addEventListener("click",(function(){re.resetValidation(),Z.open()})),u.addEventListener("click",(function(){te.resetValidation(),Y.open();var e=H.getUserInfo();i.value=e.name,a.value=e.job}));var te=new o(p,document.querySelector('form[name="edit-profile"]')),ne=new o(p,document.querySelector('form[name="new-card"]')),re=new o(p,document.querySelector('form[name="change-avatar"]'));te.enableValidation(),ne.enableValidation(),re.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,